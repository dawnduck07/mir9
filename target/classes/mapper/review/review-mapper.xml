<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">
  
	<!-- 리뷰 조회 + 검색 --> 
	<select id="totalReviewCount" parameterType="hashmap" resultType="int">
		select COUNT(*)
		  from (select r.review_code,
					   r.order_no,
			 		   r.member_no,
			 		   r.product_no,
			 		   r.review_category_no,
			 		   review_title,
			 		   review_content,
			 		   review_date,
			 		   CONCAT(m.last_name, m.first_name) as writer,
			 		   p.product_name as productName,
			 		   c.review_category_name as reviewCategoryName
				  from tb_review r
				  join tb_order as o on r.order_no = o.order_no 
				  join member as m on r.member_no = m.member_no
				  join product as p on r.product_no = p.product_no
				  join review_category as c on r.review_category_no = c.review_category_no
				 order by r.review_code ASC) as a
		<where>
			<if test="keyword != '' and keyword != null">
				<choose>
					<when test="field eq 'total'">
						a.writer LIKE CONCAT('%', #{keyword}, '%') || 
						productName LIKE CONCAT('%', #{keyword}, '%')
					</when>
					<otherwise>
						${field} LIKE CONCAT('%', #{keyword}, '%')
					</otherwise>
				</choose>
			</if>
		</where>
	</select>	
  	<select id="reviewList" parameterType="map" resultType="review">
		select c.*
		  from (select @ROWNUM:=@ROWNUM+1 as rowNum, b.* 
				  from (select @ROWNUM:=0, a.*
				  		  from (select r.review_code,
									   r.order_no,
							 		   r.member_no,
							 		   r.product_no,
							 		   r.review_category_no,
							 		   review_title,
							 		   review_content,
							 		   review_date,
							 		   CONCAT(m.last_name, m.first_name) as writer,
							 		   p.product_name as productName,
							 		   c.review_category_name as reviewCategoryName
								  from tb_review r
								  join tb_order as o on r.order_no = o.order_no 
								  join member as m on r.member_no = m.member_no
								  join product as p on r.product_no = p.product_no
								  join review_category as c on r.review_category_no = c.review_category_no
								 order by r.review_code ASC) as a
						 <where>
							<if test="keyword != '' and keyword != null">
								<choose>
									<when test="field eq 'total'">
										a.writer LIKE CONCAT('%', #{keyword}, '%') || 
										productName LIKE CONCAT('%', #{keyword}, '%')
									</when>
									<otherwise>
										${field} LIKE CONCAT('%', #{keyword}, '%')
									</otherwise>
								</choose>
							</if>
						</where>) as b) as c
		 where c.rowNum BETWEEN #{startRow} AND #{endRow}
	</select> 
  	 
  	<!-- 리뷰 모달 정보 불러오기 -->
  	<!-- 작성자, 한 줄 후기, 구매 후기 -->
  	<select id="reviewModal" parameterType="int" resultType="review">
  		SELECT R.REVIEW_CODE
			 , R.ORDER_NO
			 , R.MEMBER_NO 
			 , R.PRODUCT_NO
			 , R.REVIEW_CATEGORY_NO
			 , REVIEW_TITLE
			 , REVIEW_CONTENT
			 , REVIEW_DATE
  			 , CONCAT(M.LAST_NAME, M.FIRST_NAME) AS WRITER
  		  FROM TB_REVIEW R
  		  JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
  		 WHERE R.REVIEW_CODE = #{reviewCode}
  	</select>
  	
  	<!-- 이미지 -->
  	<select id="reviewImgModal" parameterType="int" resultType="reviewImg">
  		SELECT DISTINCT I.REVIEW_IMG_NO
  			 , I.REVIEW_CODE
  			 , ORIGIN_NAME
  			 , REVIEW_IMG_URL
  		  FROM REVIEW_IMG I
  		  JOIN TB_REVIEW R ON I.REVIEW_CODE = R.REVIEW_CODE
  		 WHERE I.REVIEW_CODE = #{reviewCode}
  	</select>
  	
  	<!-- 카테고리 조회 -->
  	<select id="selectCategory" resultType="int">
  		SELECT REVIEW_CATEGORY_NO
  		  FROM TB_REVIEW
  		 WHERE REVIEW_CODE = #{reviewCode}
  	</select>
  	
  	<!-- 리뷰 삭제 : 포토후기일 경우 사진 파일 먼저 지우기 -->
  	<delete id="imgDelete">
  		DELETE FROM REVIEW_IMG
  		 WHERE REVIEW_CODE = #{reviewCode}  
  	</delete>
  	
  	<delete id="selectDelete">
  		DELETE FROM TB_REVIEW
  		 WHERE REVIEW_CODE = #{reviewCode}  
  	</delete>
  	
  	
</mapper>